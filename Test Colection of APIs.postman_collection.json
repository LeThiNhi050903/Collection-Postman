{
	"info": {
		"_postman_id": "56dd939f-e0dc-4a2d-80e0-5192cdf482e5",
		"name": "Test Colection of APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35159177"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Updated response time test to 300ms\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"// Test for required fields - userId, id, title, and body\r",
							"pm.test(\"Response has the required fields - userId, id, title, and body\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    // Check if the response data is an array\r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    // Check for the presence of required properties in each item of the array\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property('userId');\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('title');\r",
							"        pm.expect(item).to.have.property('body');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"// Test for non-empty title and body\r",
							"pm.test(\"Title and body should be non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  // Check if the response data is an array\r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  \r",
							"  // Check for non-empty title and body in each post\r",
							"  responseData.forEach(function(post) {\r",
							"    pm.expect(post.title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");\r",
							"    pm.expect(post.body).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Body should not be empty\");\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"// Test for content type\r",
							"pm.test(\"Content type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"// Updated response time test to 300ms\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "images",
							"type": "file",
							"src": [],
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}